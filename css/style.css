/* анимация */
@keyframes render {
  0% {
    stroke-dasharray: 0 100;
  }
}

/* Мы намеренно не указали состояние в конечной точки анимации — 100%, так как у каждой секции своя длина. В данном случае после выполнения 
анимации свойство stroke-dasharray примет то значение, которое мы уже прописали ранее для каждой секции. Так работает анимация — 
по окончании элемент возвращается в исходное состояние. */

html,
body {
	margin: 0;
	padding: 0;
	font-family: "Verdana", sans-serif;
  
	background-color: #eedcf2;
}

.header {
	font-size: 25px;
	color: #591d48;
	text-align: center;

}

.subheader {
	font-size: 20px;
	color: #8a3e74;
	text-align: center;
}

.subheader > a {
	color: #591d48;
}

.canvas {
	margin: 0 auto;
	display: flex;
	justify-content: space-between;
	align-items: center;
	max-width: 800px;
}

.legend {
	max-width: 250px;
	margin-left: 30px;
}

.title {  
	font-size: 18px;
	line-height: 21px;
	color: #591d48;
	font-family: "Verdana", sans-serif;
}

.caption-list {
	margin: 0;
	padding: 0;
	list-style: none;
}

.caption-item {
	position: relative;

	margin: 20px 0;
	padding-left: 30px;
	font-size: 16px;
	line-height: 18px;
	color: #591d48;  
	cursor: pointer;
}

.caption-item:hover {
	opacity: 0.8;
}

.caption-item::before {
	content: "";
  
	position: absolute;
	top: 0;
	left: 0;
  
	width: 20px;
	height: 20px;
  
	border-radius: 8px;
}

.caption-item:nth-child(1)::before {
	background-color: #86cfa3;
}

.caption-item:nth-child(2)::before {
	background-color: #a2c6e0;
}

.caption-item:nth-child(3)::before {
	background-color: #ffc7ec;
}

.caption-item:nth-child(4)::before {
	background-color: #f8faa0;
}

.caption-item:nth-child(5)::before {
	background-color: #adffd8;
}

.caption-item:nth-child(6)::before {
	background-color: #f2c48f;
}

.caption-item:nth-child(7)::before {
	background-color: #e3bfe2;
}

.chart {
	min-width: 500px;
}

.unit {
	fill: none;
	stroke-width: 10;
	cursor: pointer;
  
  /* animation-name и animation-duration позволят задать название и продолжительность анимации и применить её к секциям диаграммы. */
	animation-name: render;
	animation-duration: 1.5s;
	transition-property: all; 
	transition-duration: 1.5s;
}

.unit:hover,
.hovered {
	opacity: 0.8;
	stroke-width: 12;
}

.unit:nth-child(1) {
	stroke: #86cfa3;
  /* stroke-dasharray предназначено для создания пунктирных обводок и в качестве значения принимает длину отрезков 
	и пробелов между ними. В нашем случае мы используем свойство не совсем традиционным способом: отрезок будет только один 
	— сама секция, а вся остальная окружность — это пробел */
	stroke-dasharray: 8 100;
}

.unit:nth-child(2) {
	stroke: #a2c6e0;
	stroke-dasharray: 11 100;
  /* по умолчанию все секции будут начинаться из одной точки, а нам нужно расположить их одну за другой по кругу. Чтобы добиться 
	нужного поведения, используем свойство stroke-dashoffset — оно позволит сдвинуть обводку на нужное нам расстояние. */
	stroke-dashoffset: -8;
}

.unit:nth-child(3) {
	stroke: #ffc7ec;
	stroke-dasharray: 11 100;
	stroke-dashoffset: -19;
}

.unit:nth-child(4) {
	stroke: #f8faa0;
	stroke-dasharray: 14 100;
	stroke-dashoffset: -30;
}

.unit:nth-child(5) {
	stroke: #adffd8;
	stroke-dasharray: 11 100;
	stroke-dashoffset: -44;
}

.unit:nth-child(6) {
	stroke: #f2c48f;
	stroke-dasharray: 5 100;
	stroke-dashoffset: -55;
}

.unit:nth-child(7) {
	stroke: #e3bfe2;
	stroke-dasharray: 40 100;
	stroke-dashoffset: -60;
}